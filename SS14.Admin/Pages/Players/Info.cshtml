@page "{userId}"
@using Content.Server.Database
@using SS14.Admin.Helpers
@using SS14.Admin.Pages.Tables
@model SS14.Admin.Pages.Players.Info

@{
    ViewData["Title"] = $"Player Info for {Model.Player.LastSeenUserName}";
}

<div class="container">
    <h1>Player information for @Model.Player.LastSeenUserName</h1>

    <dl class="row">
        <dt class="col-sm-2">User ID:</dt>
        <dd class="col-sm-10 monotype">@Model.Player.UserId</dd>
        <dt class="col-sm-2">Last seen username:</dt>
        <dd class="col-sm-10">@Model.Player.LastSeenUserName</dd>
        <dt class="col-sm-2">First seen time:</dt>
        <dd class="col-sm-10">@Model.Player.FirstSeenTime.ToString("yyyy-MM-dd HH:mm:ss")</dd>
        <dt class="col-sm-2">Last seen time:</dt>
        <dd class="col-sm-10">@Model.Player.LastSeenTime.ToString("yyyy-MM-dd HH:mm:ss")</dd>
        <dt class="col-sm-2">Last seen address:</dt>
        <dd class="col-sm-10 monotype">@Model.Player.LastSeenAddress</dd>
        <dt class="col-sm-2">Last seen HWID:</dt>
        <dd class="col-sm-10 monotype">@BanHelper.FormatHwid(Model.Player.LastSeenHWId)</dd>
    </dl>
</div>

<div class="container">
    <h2>Play time</h2>

    <table class="table table-striped mt-3">
        <thead>
        <tr>
            <th>Timer</th>
            <th>Time played (h:mm)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var tracker in Model.PlayTimes)
        {
            <tr>
                <td class="font-weight-bold">@tracker.Tracker</td>
                <td>@((int)tracker.TimeSpent.TotalHours):@tracker.TimeSpent.Minutes.ToString("D2")</td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="container">
    <h2>Character profiles</h2>

    <table class="table table-striped mt-3">
        <thead>
        <tr>
            <th>Name</th>
            <th>Age</th>
            <th>Sex</th>
            <th>Gender</th>
            <th>Species</th>
            <th>Favorite job</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var profile in Model.Profiles)
        {
            <tr>
                <td class="font-weight-bold">@profile.CharacterName</td>
                <td>@profile.Age</td>
                <td>@profile.Sex</td>
                <td>@profile.Gender</td>
                <td>@profile.Species</td>
                @{ var favJob = profile.Jobs.SingleOrDefault(e => e.Priority == DbJobPriority.High); }
                <td>@(favJob == null ? "none" : favJob.JobName)</td>
            </tr>
        }
        </tbody>
    </table>
</div>


<div class="container">
    <h2>Notes</h2>

    <span class="small">Total: @Model.Notes.Length</span>
    <table class="table table-striped mt-3">
        <thead>
        <tr>
            <th>Message</th>
            <th>Round</th>
            <th>Created</th>
            <th>Edited</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var note in Model.Notes)
        {
            <tr>
                <td>
                    @note.Message
                </td>
                <td>
                    @note.RoundId
                </td>
                <td>
                    @note.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")<br/>by @note.CreatedBy.LastSeenUserName
                </td>
                <td>
                    @note.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")<br/>by @note.CreatedBy.LastSeenUserName
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="container">
    <h2>Bans</h2>
    <partial name="Tables/BansTable" model="@(new BansTableModel(Model.GameSortState,Model.GameBanPagination, 0 ,false))"/>
</div>

<div class="container">
    <h2>Role Bans</h2>
    <partial name="Tables/RoleBansTable" model="@(new RoleBansTableModel(Model.RoleSortState,Model.RoleBanPagination, 0, false))"/>
</div>
